import{_ as a,c as e,o as t,a5 as s}from"./chunks/framework.-i2sbza6.js";const g=JSON.parse('{"title":"HttpCanary-Android","description":"","frontmatter":{},"headers":[],"relativePath":"guide/import_https/httpcanary.md","filePath":"guide/import_https/httpcanary.md","lastUpdated":1692363842000}'),o={name:"guide/import_https/httpcanary.md"},i=s(`<h1 id="httpcanary-android" tabindex="-1">HttpCanary-Android <a class="header-anchor" href="#httpcanary-android" aria-label="Permalink to &quot;HttpCanary-Android&quot;">​</a></h1><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>It is not working again on some devices, I don&#39;t know why ╮(╯▽╰)╭</p><p>Please use <a href="./charles">Charles</a> if HttpCanary failed.</p></div><p>Once you installed CA cert, you don&#39;t need PC anymore.</p><p>For Android 6 or lower:</p><ul><li>Install CA cert in HttpCanary</li><li>start sniffing</li></ul><h2 id="adb" tabindex="-1">adb <a class="header-anchor" href="#adb" aria-label="Permalink to &quot;adb&quot;">​</a></h2><p>For Android 7-10(root required) 0. Turn on Developer Mode and Debugging Mode in Android Settings</p><ol><li><p>Install CA cert in HttpCanary</p></li><li><p>download adb from <a href="https://developer.android.com/studio/releases/platform-tools" target="_blank" rel="noreferrer">https://developer.android.com/studio/releases/platform-tools</a>, add it to Path(environment variable)</p></li><li><p>open CMD or PowerShell, make sure <code>adb</code> or <code>./adb</code> works</p></li><li><p>connect mobile phone via USB, or connect emulator via <code>adb connect 127.0.0.1:xxxx</code></p><p>xxxx is the emulator port, it depends on what emulator you are using, search it. Do connect one device or emulator at one. <code>adb devices</code> to check connected devices.</p></li><li><p>Run</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>adb shell</span></span>
<span class="line"><span>su</span></span>
<span class="line"><span>mount -o rw,remount /</span></span>
<span class="line"><span>cp -f /data/data/com.guoshi.httpcanary/cache/HttpCanary.pem /system/etc/security/cacerts/87bc3517.0</span></span>
<span class="line"><span>chmod 644 /system/etc/security/cacerts/87bc3517.0</span></span>
<span class="line"><span>touch /data/data/com.guoshi.httpcanary/cache/HttpCanary.jks</span></span>
<span class="line"><span>chmod 600 /data/data/com.guoshi.httpcanary/cache/HttpCanary.jks</span></span></code></pre></div></li><li><p>reopen HttpCanary and start sniffing</p></li></ol><h3 id="some-emulator-ports" tabindex="-1">Some Emulator ports <a class="header-anchor" href="#some-emulator-ports" aria-label="Permalink to &quot;Some Emulator ports&quot;">​</a></h3><p>May be different with actual port ╮(╯▽╰)╭</p><ul><li>NetEase MuMu 7555</li><li>Nox 62001</li><li>BlueStacks 5555 (ps:There is no network/cert related settings?)</li></ul><h2 id="magisk-justtrustme" tabindex="-1">Magisk+JustTrustMe <a class="header-anchor" href="#magisk-justtrustme" aria-label="Permalink to &quot;Magisk+JustTrustMe&quot;">​</a></h2><p>Also need root.</p><ol><li><p>Install Magisk</p></li><li><p>In Magisk, install <a href="https://github.com/SekiBetu/JustTrustMe/releases" target="_blank" rel="noreferrer">JustTrustMe</a> or <a href="https://github.com/NVISOsecurity/MagiskTrustUserCerts/releases" target="_blank" rel="noreferrer">MagiskTrustUserCerts</a> module</p></li><li><p>Install HttpCanary CA cert as user cert.</p></li><li><p>Restart phone, the module will auto move user cert to system cert</p></li><li><p>(Android 11+?) create this file and give 600 permission</p><p><code>/data/data/com.guoshi.httpcanary/cache/HttpCanary.jks</code></p></li><li><p>start sniffing</p></li></ol><h2 id="target-https-request" tabindex="-1">Target Https Request <a class="header-anchor" href="#target-https-request" aria-label="Permalink to &quot;Target Https Request&quot;">​</a></h2><p>It&#39;s the login request:</p><ul><li>JP:</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>https://game.fate-go.jp/login/top?_userId=xxxx</span></span></code></pre></div><ul><li>NA:</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>https://game.fate-go.us/login/top?_userId=xxxx</span></span></code></pre></div><ul><li>CN: where <code>line3-s2-ios-fate</code> may change, the key point is <code>_key=toplogin</code></li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>https://line3-s2-ios-fate.bilibiligame.net/rongame_beta//rgfate/60_1001/ac.php?_userId=xxxx&amp;_key=toplogin</span></span></code></pre></div><ul><li>TW: similar with CN, but its domain is <code>https://line3-s1-all.fate-go.com.tw</code></li></ul><h2 id="notes" tabindex="-1">Notes <a class="header-anchor" href="#notes" aria-label="Permalink to &quot;Notes&quot;">​</a></h2><p>I don&#39;t try much for this method, please google it for more details.</p>`,25),n=[i];function r(l,p,c,d,h,u){return t(),e("div",null,n)}const b=a(o,[["render",r]]);export{g as __pageData,b as default};
