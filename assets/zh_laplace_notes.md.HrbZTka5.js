import{_ as a,c as i,o as t,a5 as e}from"./chunks/framework.-i2sbza6.js";const g=JSON.parse('{"title":"Laplace 开发笔记","description":"","frontmatter":{},"headers":[],"relativePath":"zh/laplace/notes.md","filePath":"zh/laplace/notes.md","lastUpdated":1707362395000}'),s={name:"zh/laplace/notes.md"},l=e(`<h1 id="laplace-开发笔记" tabindex="-1">Laplace 开发笔记 <a class="header-anchor" href="#laplace-开发笔记" aria-label="Permalink to &quot;Laplace 开发笔记&quot;">​</a></h1><p>又名《螺旋社之十万个为什么》</p><details class="details custom-block"><summary>目录</summary><nav class="table-of-contents"><ul><li><a href="#目标切换">目标切换</a><ul><li><a href="#下一个目标选择">下一个目标选择</a></li><li><a href="#全体攻击指令卡-大总统-的目标切换和结算时机">全体攻击指令卡(大总统)的目标切换和结算时机</a></li></ul></li><li><a href="#dot伤害结算">DOT伤害结算</a></li><li><a href="#鞭尸-bug-bug">鞭尸 Bug Bug</a></li><li><a href="#复数改变职阶相性的叠加">复数改变职阶相性的叠加</a></li><li><a href="#复数宝具色卡变更buff的叠加">复数宝具色卡变更buff的叠加</a></li><li><a href="#复仇-revenge的目标选择">复仇/Revenge的目标选择</a></li><li><a href="#小安宝具机制">小安宝具机制</a></li><li><a href="#血条消失术">血条消失术</a></li></ul></nav></details><h2 id="目标切换" tabindex="-1">目标切换 <a class="header-anchor" href="#目标切换" aria-label="Permalink to &quot;目标切换&quot;">​</a></h2><h3 id="下一个目标选择" tabindex="-1">下一个目标选择 <a class="header-anchor" href="#下一个目标选择" aria-label="Permalink to &quot;下一个目标选择&quot;">​</a></h3><p>对于普通关卡，按照在场1-6的位置进行切换。</p><p>若<code>QuestFlag.immediateEnemyDisappear</code>, 由于敌人立马补充，将按照uniqueId顺序切换，如1-6，打死1号位，1号位补充id=7; 切到2号位打死，2号位补充id=8；再切换到3号位而非1号位的id=7。也相当于登场顺序，但在不维护登场顺序的时候看单调递增的uniqueId即可。</p><h3 id="全体攻击指令卡-大总统-的目标切换和结算时机" tabindex="-1">全体攻击指令卡(大总统)的目标切换和结算时机 <a class="header-anchor" href="#全体攻击指令卡-大总统-的目标切换和结算时机" aria-label="Permalink to &quot;全体攻击指令卡(大总统)的目标切换和结算时机&quot;">​</a></h3><p>宝具卡、全体攻击卡(大总统 Buster / Extra)前后均会触发敌方的退场/亡语/目标切换。 举例说明：大总统BAQ接EX会执行三次退场结算和目标更新:</p><ol><li>Buster后执行第一次退场</li><li>AQ之后执行第二次退场</li><li>EX之后执行第三次退场</li></ol><p>唯一需要注意的就是如果大总统BAQ然后B卡打死了那可能会影响回收。</p><h2 id="dot伤害结算" tabindex="-1">DOT伤害结算 <a class="header-anchor" href="#dot伤害结算" aria-label="Permalink to &quot;DOT伤害结算&quot;">​</a></h2><p>回合结束时，先记录当前血量为<code>x</code>，接着先结算回血，再结算扣血。若扣血会导致从者退场(<code>hp &lt;= 0</code>):</p><ul><li>当敌方(包括候补)存在幸存者: 正常结算</li><li>当敌方(包括候补)全部死亡时: 让该从者存活，DoT伤害变为<code>x - 1</code></li></ul><p>举例说明，巴贝奇装备1HP的毅力礼装后使用3技能(300 DoT)，梵高使用二技能(100 Dot + 300 HoT)，接着陈宫嘲讽自己发射巴贝奇：</p><ul><li>若当前敌方(包括候补)存在幸存者: 巴贝奇血量为 <code>1 + 300 - 400 = -99 HP</code> 结算阵亡退场</li><li>若当敌方(包括候补)全部死亡时: 巴贝奇血量为 <code>1 + 300 - 0 = 301 HP</code>，此时由于当前血量为1，所以DoT伤害为 <code>1 - 1 = 0</code></li></ul><p>也就是说，击杀当前wave的全部敌人可以帮助有致死DoT的从者多活一回合。</p><h2 id="鞭尸-bug-bug" tabindex="-1">鞭尸 Bug Bug <a class="header-anchor" href="#鞭尸-bug-bug" aria-label="Permalink to &quot;鞭尸 Bug Bug&quot;">​</a></h2><p>众所周知，fgo的普通指令卡有鞭尸bug，导致即使游戏内未显示Overkill时也算作Overkill。</p><p>该bug作为良性bug被当作feature保留了下来，如果出卡之间敌方结算了退场并且发动亡语或者毅力时发动的buff，则鞭尸bug失效。</p><p>该鞭尸bug bug可以在2.6的新达灵顿free第二面测试，这面包含一个没有亡语的大怪和两个有亡语的小怪。使用AOE宝具击杀两个小怪同时把大怪打到半血以下可以发现鞭尸bug此时失效。</p><h2 id="复数改变职阶相性的叠加" tabindex="-1">复数改变职阶相性的叠加 <a class="header-anchor" href="#复数改变职阶相性的叠加" aria-label="Permalink to &quot;复数改变职阶相性的叠加&quot;">​</a></h2><p>举例莱妮斯放宝具打消防御不利相性，迦摩使用三技能变为对AE阶有利，同时AE阶敌方单位赋予自身对杀阶攻击有利，最终该AE阶敌方攻击迦摩会是几倍克制？</p><p>该问题的答案取决于迦摩三技能和莱妮斯宝具的顺序:</p><ul><li>首先，防御方的buff会覆盖掉攻击方的，所以直接忽视AE攻击者的buff</li><li>迦摩身上此时有复数的职阶相性buff，<strong>先上的buff覆盖后上的buff</strong>，即先放莱妮斯宝具，则最终克制系数为1; 反之先放迦摩三技能，则为0.5</li></ul><p><s>很神奇吧</s></p><h2 id="复数宝具色卡变更buff的叠加" tabindex="-1">复数宝具色卡变更buff的叠加 <a class="header-anchor" href="#复数宝具色卡变更buff的叠加" aria-label="Permalink to &quot;复数宝具色卡变更buff的叠加&quot;">​</a></h2><p>可以自己带俩光兔兔和仇凛 + CD服试试看！答案是后选的卡色会覆盖先选的卡色。</p><h2 id="复仇-revenge的目标选择" tabindex="-1">复仇/Revenge的目标选择 <a class="header-anchor" href="#复仇-revenge的目标选择" aria-label="Permalink to &quot;复仇/Revenge的目标选择&quot;">​</a></h2><p>复仇相关Buff: selfturnendFunction(每回合结束发动), delayFunction(X回合后发动), gutsFunction(毅力时发动), damageFunction(受击时发动), deadFunction(死亡时发动)。每个trigger skill单独计算复仇目标。</p><p>自身受到伤害类型分为: 指令卡伤害、宝具伤害、HP减少(lossHp)、DoT(毒/诅咒/灼烧, 无攻击来源)、damageValue(多见于敌方直接造成伤害)。</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>目前目标选择机制仍存疑</p></div><p>目前认为基于以下顺序：</p><ol><li><p>先选择复仇目标</p><p>以上buff触发技能时，将最后一个攻击自身的人设定为复仇目标（无论敌方/己方、前排/后排、是否死亡）:</p><ul><li>排除攻击来源于自身或无来源</li><li>若<code>DataVals.OpponentOnly</code>，则仅遍历敌方（目前仅deadFunction使用）</li></ul><p>若复仇目标不存在，则随机选择一名“敌方单体”。在Laplace中应回退至选中的敌方单位。</p></li><li><p>根据<code>func.funcTargetType</code>选择实际发动目标</p><ul><li><code>enemy</code>: 敌方单体，若上述存在复仇目标，则使用该目标（无论是敌方还是己方）。若目标已死亡，则由于无目标不发动。</li><li><code>enemyOneNoDamageNoAction</code>: 同上，但仅在自身受到伤害时发动。</li><li><code>enemyOther</code>/<code>enemyOtherFull</code>: 除目标外的敌方全体，首先获取敌方全体，再剔除上述复仇目标，因此: <ul><li>若复仇目标为己方，实际为敌方全体</li><li>若复仇目标为敌方，实际为复仇目标外的敌方全体</li></ul></li></ul></li></ol><h2 id="小安宝具机制" tabindex="-1">小安宝具机制 <a class="header-anchor" href="#小安宝具机制" aria-label="Permalink to &quot;小安宝具机制&quot;">​</a></h2><p>目前测试结果为，小安会在释放宝具之后记录自身受到伤害的数值，同时回血会抵消这部分的数值。 需要注意的几个点：</p><ul><li>累计受到的伤害不会是负数，最低为0。</li><li>从者的最低生命值为0，也就是说即便小安现在就 500 HP 同时吃了一个亿的伤害，记录的伤害为 500 而非一亿。</li><li>DOT 伤害（诅咒、毒、灼烧）、强制即死（陈宫宝具）、以及自己打自己造成的伤害（包括自己即死自己）不计入受到的伤害。</li><li>HOT 回复计入，即抵消累计受到的伤害（不过现在好像没有再自己回合小安放完宝具再吃到敌方伤害的正经方法）。</li><li>毅力发动相当于 HP 回复，会抵消累计伤害，但是数值为 <code>毅力回复的HP - 1</code>。</li></ul><p>小Tips，大部分时候小安反弹的基础伤害（没算小安宝具的倍率之前）相当于 <code>小安在敌方行动开始前的血量 - 小安在敌方行动结束后的血量 + 毅力次数</code>。</p><h2 id="血条消失术" tabindex="-1">血条消失术 <a class="header-anchor" href="#血条消失术" aria-label="Permalink to &quot;血条消失术&quot;">​</a></h2><ul><li><code>EnemyScript.shiftPosition</code>: 初始的<code>shiftDeckIndex</code>值, <strong>默认值为-1</strong>。根据此值敌方对应血条会被隐藏。如<code>EnemyScript.shift</code>中共5个npcId，应为6管血，若shiftPosition=1，则隐藏2管血，实际显示3管额外血条。</li><li><code>EnemyScript.dispBreakDisp</code>: 初始击破血条的数量，默认值为0。即初始显示空槽数量。相当于修改了<code>shiftDeckIndex</code></li><li><code>FuncType.breakGaugeUp/Down</code>: 单纯增加或击破血条，不过有<code>DataVals.ChangeMaxBreakGauge</code>会有显示上的不同。 例如显示总计5管血剩余3管血(3/5)，若<code>DataVals.ChangeMaxBreakGauge</code>, 则相当于修改shiftPosition, 会增加最大血槽数量(4/6)，否则<strong>恢复</strong>血槽(4/5).</li></ul><p>举例: <a href="https://apps.atlasacademy.io/db/JP/quest/94091502/1" target="_blank" rel="noreferrer">FSR联动主线2-1 丑御前</a> base enemy npcId=100, EnemyScript:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;npcId&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;script&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;shift&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">101</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">102</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">103</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">104</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;shiftPosition&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;dispBreakShift&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><table><thead><tr><th>idx</th><th><strong>Step</strong></th><th><strong>lowLimitShift</strong></th><th><strong>shiftDeckIndex</strong></th><th><strong>curNpcId</strong></th><th><strong>Bars</strong></th></tr></thead><tbody><tr><td>1</td><td>init</td><td>0</td><td>-1</td><td>100</td><td>◆◆◆◆<br>5/5</td></tr><tr><td>2</td><td>shiftPosition=2</td><td>0+(2+1)=3</td><td>-1+(2+1)=2</td><td>103</td><td>◆<br>2/2</td></tr><tr><td>3</td><td>dispBreakShift=1</td><td>3</td><td>2+1=3</td><td>104</td><td>◇<br>1/2</td></tr><tr><td>4</td><td>breakGaugeUp(2)<br>+ChangeMaxBreakGauge</td><td>3-2=1</td><td>3-2=1</td><td>102</td><td>◆◆◇<br>3/4</td></tr><tr><td>5</td><td>breakGaugeUp(1)</td><td>1</td><td>1-1=0</td><td>101</td><td>◆◆◆<br>4/4</td></tr></tbody></table><blockquote><p>其中第4步为御主由井正雪的技能效果，第5步不存在该关卡中，仅展示breakGaugeUp时有无ChangeMaxBreakGauge的区别</p></blockquote>`,44),d=[l];function n(o,h,r,p,c,u){return t(),i("div",null,d)}const f=a(s,[["render",n]]);export{g as __pageData,f as default};
